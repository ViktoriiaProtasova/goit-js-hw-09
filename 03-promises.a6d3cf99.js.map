{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAXPQ,EAAAZ,GAASa,OAAOC,KAAK,CAAEC,QAAS,MAehC,IAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAExCF,EAAOM,iBAAiB,UAExB,SAAyBC,GACvBA,EAAMC,iBAQN,IANA,IAAMC,EAAQC,OAAOP,EAAQQ,OACvBC,EAAOF,OAAON,EAAOO,OACrBE,EAASH,OAAOL,EAASM,OAE3BG,EAAeL,EAEVM,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChC7B,EAAc6B,EAAGD,GACdE,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjBQ,EAAAZ,GAASa,OAAOqB,QACd,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGjDgC,OAAM,SAAAH,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClBQ,EAAAZ,GAASa,OAAOwB,QACd,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGjD0B,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({ timeout: 4000 });\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', handlerOnSubmit);\n\nfunction handlerOnSubmit(event) {\n  event.preventDefault();\n\n  const delay = Number(delayEl.value);\n  const step = Number(stepEl.value);\n  const amount = Number(amountEl.value);\n\n  let currentDelay = delay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    currentDelay += step;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","init","timeout","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","addEventListener","event","preventDefault","delay1","Number","value","step","amount","currentDelay","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.a6d3cf99.js.map"}